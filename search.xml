<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>搭建网站过程1（包含教程和debug过程）</title>
    <url>/2022/12/15/create-a-website/</url>
    <content><![CDATA[<p>本文摘要：</p>
<ol>
<li>创建GitHub仓库</li>
<li>下载Git及简单操作</li>
<li>Git设置用户名和密码</li>
<li>远程库和本地库进行链接</li>
<li>下载加速器FastGithub</li>
<li>使用Markdown</li>
</ol>
<span id="more"></span>

<p>hh以下过程搭的网站被我一个<code>git push XXXX --force</code>命令给全部覆盖掉了，算是引导我学习了很多搭网站必须步骤之外的东西吧，比如如何把代码文件等任何东西上传上库，而不仅仅是网页内容。（但好像用hexo也可以？）<br>看了这里理解了如果要fork别人的模板正确的方式应该怎么做 <em><a href="https://segmentfault.com/q/1010000008049369">hexo部署后把原来的仓库覆盖了</a></em><br>或许以后我可以试试</p>
<hr>
<h3 id="1-创建GitHub仓库"><a href="#1-创建GitHub仓库" class="headerlink" title="1. 创建GitHub仓库"></a>1. <strong>创建GitHub仓库</strong></h3><p> <em><a href="https://zhuanlan.zhihu.com/p/83834939#:~:text=%E6%8A%80%E6%9C%AF%E5%B0%8F%E7%99%BD%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%9F%201%20%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E5%89%8D%E9%9C%80%E8%A6%81%E7%9F%A5%E9%81%93%E7%9A%84%20%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%EF%BC%8C%E5%85%B6%E5%AE%9E%E5%B0%B1%E6%98%AF%E5%BB%BA%E7%AB%8B%E4%B8%80%E4%B8%AA%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99%E3%80%82%20%E5%AF%B9%E4%BA%8E%E7%BD%91%E7%AB%99%E6%9D%A5%E8%AF%B4%EF%BC%8C%E6%9C%80%E9%87%8D%E8%A6%81%E7%9A%84%E6%98%AF%E6%8B%A5%E6%9C%89%E4%B8%80%E4%B8%AA%E5%9F%9F%E5%90%8D%E3%80%82%20...%202%20%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%B5%81%E7%A8%8B,5%20%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E4%BB%96%E4%BA%BA%E7%9A%84%E6%A8%A1%E6%9D%BF%20%E7%82%B9%E5%87%BB%E4%B8%8A%E9%9D%A2%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%A8%A1%E6%9D%BF%E9%93%BE%E6%8E%A5%EF%BC%8C%E4%BC%9A%E8%B7%B3%E8%BD%AC%E5%88%B0%E5%8D%9A%E5%AE%A2%E6%A8%A1%E6%9D%BF%E6%89%80%E5%9C%A8%E7%9A%84Github%E4%BB%93%E5%BA%93%E3%80%82%20...%206%20%E5%8F%91%E5%B8%83%E8%87%AA%E5%B7%B1%E7%9A%84%E7%AC%AC%E4%B8%80%E6%9D%A1%E5%8D%9A%E5%AE%A2%20%E5%A6%82%E6%9E%9C%E4%BD%A0%E5%AE%8C%E6%88%90%E4%BA%86%E4%B8%8A%E9%9D%A2%E7%9A%84%E6%89%80%E6%9C%89%E6%AD%A5%E9%AA%A4%EF%BC%8C%E9%82%A3%E4%B9%88%E6%81%AD%E5%96%9C%E4%BD%A0%EF%BC%8C%E6%8E%A5%E4%B8%8B%E6%9D%A5%E5%B0%B1%E5%8F%AF%E4%BB%A5%E5%8F%91%E5%B8%83%E8%87%AA%E5%B7%B1%E7%9A%84%E7%AC%AC%E4%B8%80%E6%9D%A1%E5%8D%9A%E5%AE%A2%E4%BA%86%E3%80%82%20">技术小白如何搭建个人博客？</a></em></p>
<p>（现在看来用这种方法搭网站很难受，板式也没有我现在的好看，当初不应该fork别人的模板，因此<em>强烈不建议</em>跟着这篇文章做<br>具体看哪篇文章好我还没有对比过，但一开始一定要自己新建仓库，不要fork模板仓库。）</p>
<p>因为我当时是直接fork别人的模板，他有几十篇文章残留在post文件夹，要把它删掉。 <em><a href="https://blog.csdn.net/Panda325/article/details/108074536?spm=1001.2101.3001.6650.9&utm_medium=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-9-108074536-blog-106346561.pc_relevant_3mothn_strategy_recovery&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-9-108074536-blog-106346561.pc_relevant_3mothn_strategy_recovery&utm_relevant_index=10">删除github上仓库里的文件</a></em><br>这里告诉我们要用本地比较快（网页上要一个一个文件点进去delete——save是真的慢），所以要下载Git</p>
<h3 id="2-下载Git及简单操作"><a href="#2-下载Git及简单操作" class="headerlink" title="2. 下载Git及简单操作"></a>2. <strong>下载Git及简单操作</strong></h3><p>  <em><a href="https://zhuanlan.zhihu.com/p/369486197">还不会使用 GitHub ？ GitHub 教程来了！</a></em> （这篇文章的后面讲到了Git的下载和基本使用）</p>
<p>这篇文章超级详细，还有教clone、pull、push之类的,让我学会了很多必要的命令，也是除搭建那个废弃版面的一个重要收获。</p>
<p>能记得的是进入要删除的文件夹，右键Git Bash here，然后在里面dir 查看文件， 再一个个git rm “filename” 过于折磨弄了一个多小时，后来想到可不可以直接在文件夹里删掉，在删wiki文件夹时试了一下，提示没有这个过程,好奇怪。然后我push之后</p>
<p><img src="https://github.com/diligencyj/diligencyj.github.io/raw/master/images/%E5%9B%BE%E7%89%871.jpg" alt="图片alt"></p>
<p>这是我再次pull和push，也没有成功删掉wiki里的文件<br><img src="https://github.com/diligencyj/diligencyj.github.io/raw/master/images/%E5%9B%BE%E7%89%872.jpg" alt="图片alt"></p>
<h3 id="3-Git设置用户名和密码"><a href="#3-Git设置用户名和密码" class="headerlink" title="3. Git设置用户名和密码"></a>3. Git设置用户名和密码</h3><p><img src="https://github.com/diligencyj/diligencyj.github.io/raw/master/images/%E5%9B%BE%E7%89%873.jpg" alt="图片alt"><br>在我要把文件放进库里的时候提示 Author identity unknown,是我刚下载时没有设置用户名和密码，幸好当时那个页面还没有关，在设置了下面两行之后再运行就成功了。（在:c&#x2F;Users&#x2F;14779下面的）<br><img src="https://github.com/diligencyj/diligencyj.github.io/raw/master/images/%E5%9B%BE%E7%89%874.jpg" alt="图片alt"></p>
<p>这样就可以成功了。</p>
<h3 id="4-远程库和本地库进行链接"><a href="#4-远程库和本地库进行链接" class="headerlink" title="4. 远程库和本地库进行链接"></a>4. 远程库和本地库进行链接</h3><p>用ssh设置公钥私钥<br><img src="https://github.com/diligencyj/diligencyj.github.io/raw/master/images/%E5%9B%BE%E7%89%875.jpg" alt="图片alt"></p>
<p>第一个ssh是检查有没有下载ssh，默认Git是带了的</p>
<p>第二步就是生成公钥私钥，然后可以看到有说储存在哪里。</p>
<p>私钥可以直接强行用web打开，但是公钥不行，上网找到了可以用cmd打开的方法：用命令行（忘了要不要管理员权限）用cd命令进入ssh目录（cd .ssh),接着输入 more id_ras.pub,就可以得到公钥。最后进入GitHub里面配置。上面那篇文章有具体将在哪里配置。但有一个很致命的问题是他说到：<br><img src="https://github.com/diligencyj/diligencyj.github.io/raw/master/images/%E5%9B%BE%E7%89%876.jpg" alt="图片alt"></p>
<p><strong>很重要！链接的网址或者clone的网址一定要是SSL</strong><br>上面教我们复制的网址是HTTPS的（应该是要SSL那个），在此感谢一篇文章 <em><a href="https://blog.csdn.net/supermarian/article/details/124321031?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-1-124321031-blog-119841089.pc_relevant_3mothn_strategy_and_data_recovery&spm=1001.2101.3001.4242.2&utm_relevant_index=4">用Git将本地文件push到远程github网站的过程中踩的坑</a></em>(谢谢你呜呜），这就直接导致了我push回去的时候出现问题，搞了好久……</p>
<p>一开始的问题不是这个，而是链接不上网站<br><img src="https://github.com/diligencyj/diligencyj.github.io/raw/master/images/%E5%9B%BE%E7%89%877.jpg" alt="图片alt"></p>
<p>用了很多解决方法，比如这篇<a href="https://blog.csdn.net/good_good_xiu/article/details/118567249?spm=1001.2101.3001.6650.3&utm_medium=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-3-118567249-blog-114586867.pc_relevant_default&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-3-118567249-blog-114586867.pc_relevant_default&utm_relevant_index=4">git提交或克隆报错fatal: unable to access</a>里面也说了有可能是网速太慢。我试了无数次，甚至打开了端口看1080什么的想能不能挂VPN？还是失败了<br><img src="https://github.com/diligencyj/diligencyj.github.io/raw/master/images/%E5%9B%BE%E7%89%878.jpg" alt="图片alt"></p>
<h3 id="5-下载加速器FastGithub（帮助pull和push）"><a href="#5-下载加速器FastGithub（帮助pull和push）" class="headerlink" title="5. 下载加速器FastGithub（帮助pull和push）"></a>5. 下载加速器FastGithub（帮助pull和push）</h3><p>最后的解决方案是下载了一个加速器FastGithub,下载的过程也是有点曲折，本来一下子就找个GitHub里的代码源了，但是我找不到在哪里找exe文件下载，搜遍全网都没有，就在我要放弃的时候……我看到了那个repo的code的右边有一小栏relese，就是在里面……呜呜好笨我好笨为什么没有文章体谅一下小白第一次在这里找代码真的不一定找的到的。接下来就没有这个433的problem了真好。</p>
<p>新的问题是：<br><img src="https://github.com/diligencyj/diligencyj.github.io/raw/master/images/%E5%9B%BE%E7%89%879.jpg" alt="图片alt"></p>
<p>网上教的解决方法也如上图所示，把ssl认证改为true。</p>
<p>接着新问题2：<br><img src="https://github.com/diligencyj/diligencyj.github.io/raw/master/images/%E5%9B%BE%E7%89%8710.jpg" alt="图片alt"><br>网上教的解决方法也如图：把ssl改为false……就是在这种重复折磨中我也不知道度过了多久，直到看到那篇令我无比感激的文章教把http地址改成SSL地址。</p>
<p>到这里这个本地远程的问题就解决啦！但是好像其实对我网站搭建也没多大用处捏。</p>
<hr>
<p><strong>以下更改内容虽然花了不少时间，但已被完全覆盖掉了</strong></p>
<p>接下来是改网页，那些超链接我点进去全是模板所有者的网站，令我甚是崩溃。找到一个文章让我改index那个文件夹，一点用没有。最后是重新看了一下最开始模板自带的指示：<br><img src="https://github.com/diligencyj/diligencyj.github.io/raw/master/images/%E5%9B%BE%E7%89%8711.jpg" alt="图片alt"><br>对于自己没有认真看深感惭愧，这里耽误了好长时间。<br>一开始其实改过的，但是没弄懂部分代码什么含义就直接跳过了。其实看了好多次都忽略了很多东西，最关键的一步其实是改URL，但这是我琢磨试错了很久才得出的结论，没想到他其实一开始就告诉我了……</p>
<p>到这里我的网站界面就告一段落啦，基本的“关于”里的文字都有稍微改改。</p>
<hr>
<h3 id="6-使用Markdown"><a href="#6-使用Markdown" class="headerlink" title="6. 使用Markdown"></a>6. 使用Markdown</h3><p>下一步就是学习如何发文章了。</p>
<p>安装插件 一些动图的演示 <em><a href="https://zhuanlan.zhihu.com/p/56943330">使用vscode开始Markdown写作之旅</a></em></p>
<p> <em><a href="https://markdown.com.cn/">Markdown语法</a></em></p>
<p>也就有了我现在这篇—搭建网站过程全纪录的文章。</p>
<p>以此为记。</p>
<hr>
<h3 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h3><p>从早上10点多做到晚上9点多，效率还是低了一点……</p>
<p>写一些个人感受吧<br>真的很舒服不要太舒服了这个编辑器 爱惨了，比那个什么vim好用多了（对不起是我层次太低看不懂代码只喜欢这种简洁美观的东西，vim在复制粘贴和中文显示就卡了我很久（虽然现在都弄好了）给我留下了很大的阴影哼哼，OS实验结束了估计以后也不会用了（可惜捏））</p>
<p>有点晚了，刚好十一点半了，该准备睡觉啦！</p>
<p>PS：本篇文章初稿写于12&#x2F;14，完善于12&#x2F;16。</p>
]]></content>
      <categories>
        <category>娱乐性学习</category>
        <category>计算机</category>
      </categories>
      <tags>
        <tag>搭建网站</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2022/12/15/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<p><strong>这篇官网文章写的很详细，忘记了命令可以回来看看</strong></p>
<p><em><a href="https://hexo.io/zh-cn/docs/commands">Hexo指令</a></em></p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>尖烽时刻初赛总结</title>
    <url>/2023/01/03/%E5%B0%96%E7%83%BD%E6%97%B6%E5%88%BB%E5%88%9D%E8%B5%9B%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<p>这是一篇迟到的总结……</p>
<p>为了能在复赛有更高效率的决策和更清晰的思路——<br>Keep Fighting！</p>
<span id="more"></span>

<p>首先说说结果，我们开局定价太高，库存过多，排名7&#x2F;10，很劣势。第二回合追了一名变第六，第三到第四回合我们都是第五，第五回合变第四，最后一回合第三。（中间排名大概是这样）可以说是实现了一路追赶一路反超。前两名一直是我们学习的榜样，他们俩在我们剩余的人中间已经形成了断层，我们对他们是没有威胁的了。</p>
<p>我们的决策方式是三人轮流共享屏幕，做最终决策者。这个方法目前我们仍打算沿用，虽然按照初赛的情形，一般两个人在发言，其中一个会是我。</p>
<p>一般我们的决策从晚上八点开始，进行到十点多一点，持续两个小时。前面一个小时多一点多是表格上的操作，最后在系统的操作需要的时间不长。</p>
<p>初赛的决策界面很简洁，只有 <strong>市场报告</strong> -— <strong>销售</strong> —— <strong>生产</strong> ——<strong>财务</strong>四部分。对于销售只有价格、广告和客户服务，对于产品销量的呢会有前三项加上<strong>质量管理</strong>产生影响。<br><img src="/%E5%B0%96%E7%83%BD%E5%88%9D%E8%B5%9B.jpg" alt="图片alt"></p>
<p>下面写一写我们的决策步骤：</p>
<ol>
<li>看市场前景，了解本回合的主要走向</li>
</ol>
<p>里面内容大概是说因为什么什么原因，止痛片&#x2F;抗氧化剂的需求会增加&#x2F;减少，哪个国家的汇率会变化（可以说明在哪里发力比较有利）</p>
<ol start="2">
<li>看上一回合结果的Excel表，分析策略</li>
</ol>
<p>我们会将下面的各项费用，比如折旧费用，财务费用等，不要觉得很少，因为这里的机器折旧25%，厂5%，而且总销售额也不大，因此算上之后分摊到每一件的成本多了上百块。在这种算法下，打高价的利润肯定是最可观的，因为有可能高价的利润是地价的两倍，但是销售量不会是二分之一。</p>
<p>然后我们选定我们每个市场每个产品要模仿的对象，结合我们自己的意愿，初定如：芬兰抗氧化剂高价格高广告，止痛片平均价格高广告等。</p>
<ol start="3">
<li>进行需求预测，在系统上操作</li>
</ol>
<p>首先是根据我们的市场策略，瞄定的对手上一回合的市场份额，来预估我们用这个策略的销量</p>
<p>其次是根据市场前景给的大致增长&#x2F;减少量，乘以我们上一步预测的销量，来确定我们本回合的预计需求</p>
<ol start="4">
<li>销售部分，根据初定策略和对手上回合售价，来决定本回合售价。</li>
</ol>
<p>这一步首先要根据之前回合市场平均每回合下降价格的趋势，先算出平均价格，再在这基础上增加&#x2F;减少我们的售价。</p>
<p><em>这一步我认为我们需要改进，因为我们会在这里怀疑、动摇我们开始的分析，觉得“哎呀他卖的也不多，利润好像也一般般”之类的，或者对于价格调整幅度把控不好，又要倒回表中进行价格反复比对，会耽误很多时间。<strong>可行的改进方案：在第2步分析Excel的时候就把价格写上，然后到时再根据我们的定价和销量调整广告。</strong></em></p>
<ol start="5">
<li>生产部分，在满足需求的基础上设置各有5-10的库存</li>
</ol>
<p>因为缺货成本会比库存成本高很多，因此略有库存是很有必要的。</p>
<p>第一回合建厂力度太猛，导致产能空缺很多，我们又不愿意打倾销战。但是后来有一回合还是太保守，在我们还有很多产能的情况下出现了未满足需求。后面基本都会预多几件。</p>
<p>一般都是芬兰产够芬兰和法国的，美国产够自己的就好。因为芬兰运到法国的运费永远会更便宜。</p>
<ol start="6">
<li>财务部分</li>
</ol>
<p>只能调整长期贷款和内部贷款，可操作的空间不大。后期基本是在借钱防止短贷，用内部贷款把各个市场的现金调平。</p>
<hr>
<p>以上基本就是我们的决策步骤。</p>
<p>我认为我们只有两个人讨论问题也不是很大，就是如果我投屏没有人理我的时候会有点难受。</p>
<p><strong>改进措施：（只能谈谈我做决策时的改进）</strong></p>
<p>首先是做决策的时候自己能完成的表格部分就先完成，在讨论时间前完成，不要耽误大家一起决策的时间。</p>
<p>其次是自己先有一个大致的分析，然后问她们，如果她们肯定的答案我就直接填数据，有问题再一起讨论，不要边征求意见边想，这样效率不高。</p>
<p>最后是要有一个很完整的决策步骤，虽然以上写的步骤在脑子里会有一个大概的雏形，类似于出门前要干什么事一样，但是有一个明确的步骤就会有利于控制时间，每一步大概需要多长时间（自己在决策两次后估算出一个时间），后面还有什么内容，在这一步不要拖太久之类的。</p>
<p>今天上午磨蹭了一小时+下午两小时决策了第一回合，属于是身心俱疲，真的好累，虽然不是我投屏，但做完是有长舒一口气的感觉。汽车案例是我们上学期的企业经营模拟那节课玩过的，是真的很多变量和要思考的地方，用时更长也正常。明天想想这一案例我们的决策步骤以及如何提高决策效率。</p>
]]></content>
      <categories>
        <category>总结</category>
      </categories>
  </entry>
  <entry>
    <title>搭建网站过程2（从零开始版）</title>
    <url>/2022/12/16/create-another-weside/</url>
    <content><![CDATA[<p>本文摘要：</p>
<ol>
<li>下载npm</li>
<li>下载并配置hexo</li>
<li>自定义next主题</li>
<li>如何让图片在网页上显示</li>
<li>添加标签、分类、关于页面</li>
<li>要注意的两个点：git和hexo命令的使用范围、clone命令的先后顺序<span id="more"></span></li>
</ol>
<h2 id="搭建网站所需的完整步骤（除创建GitHub仓库）"><a href="#搭建网站所需的完整步骤（除创建GitHub仓库）" class="headerlink" title="搭建网站所需的完整步骤（除创建GitHub仓库）"></a>搭建网站所需的完整步骤（除创建GitHub仓库）</h2><h3 id="1-下载npm"><a href="#1-下载npm" class="headerlink" title="1. 下载npm"></a>1. 下载npm</h3><p> <em><a href="https://blog.csdn.net/hyh17808770899/article/details/112213437">npm安装并配置环境变量（安装node.js）</a></em><br> 前车之鉴，为了做到周全这一步我是结合着几篇文章来看的，说的大同小异大差不差。唯一遇到的一点问题是安装时有一个没有默认的选项是安装必要的工具，我勾选了，但后来实际上又没有下载（因为提示是说安装powershall迷惑了我），这会直接导致我能看到npm.exe却没有办法在命令行里找到npm。后来是change的时候不勾选就成功了。</p>
<h3 id="2-下载并配置hexo"><a href="#2-下载并配置hexo" class="headerlink" title="2. 下载并配置hexo"></a>2. 下载并配置hexo</h3><p>   <em><a href="https://blog.csdn.net/Dabie_haze/article/details/117407833#:~:text=1,%E5%86%99%E5%AE%8C%E5%90%8E%E5%86%8D%E7%94%A8hexo%20publish%E5%91%BD%E4%BB%A4%E5%8F%91%E5%B8%83%EF%BC%8C%E5%85%B7%E4%BD%93%E7%9A%84%E5%8F%AF%E4%BB%A5%E7%9C%8B%E6%88%91%E7%9A%84github%E5%8D%9A%E5%AE%A2%E4%B8%AD%E7%9A%84%E8%BF%99%E7%AF%87%E6%96%87%E7%AB%A0%EF%BC%8C%E9%87%8C%E9%9D%A2%E6%9C%89%E4%B8%80%E4%BA%9B%E5%9F%BA%E6%9C%AC%E7%9A%84Markdown%E8%AF%AD%E6%B3%95%E5%92%8Chexo%E7%9A%84%E5%91%BD%E4%BB%A4%E4%BD%BF%E7%94%A8%EF%BC%9Ahttps%3A%2F%2Fyuzehuiic.github.io%2F2021%2F05%2F29%2FA-Quick-Start-for-Blog-Writing-Markdown%2F%E3%80%82">教程：纯小白如何搭建自己的Github博客并写第一篇博文</a></em></p>
<p>   其实我是先看到这篇文章才知道要下载npm和hexo。里面说的很好，网上教人搭网站大多停留在能用那个URL打开网页就结束了，不会讲如何发博客，虽然这篇文章很短，但内容很实用。</p>
<p>   我遇到的问题是，他说要我在我打算装blog的父文件夹下载hexo，但是这和我下载npm不是同一个文件夹，install hexo一直失败，说hexo不是内部也不是外部命令。我在npm所在的父文件夹下载也失败了，最后是在我本地仓库的父文件夹的目录下才下载成功，到现在也没搞懂为什么hh。结论就是多换地方试试。</p>
<p>   <strong>最后是<code>hexo deploy</code>命令，哈哈直接导致了前仓库完全被覆盖。现在想想这样误打误撞是一件好事捏，之前那个模板又不好看，里面超多post，wiki和images我还没学会批量删除，一点点删很消磨我耐心的。</strong></p>
<h3 id="3-自定义next主题"><a href="#3-自定义next主题" class="headerlink" title="3. 自定义next主题"></a>3. 自定义next主题</h3><p>既然从零开始搭建网站，当然是要好好的美观美观啦！支撑我做下去的动力还有一个是找到了很多很好的教程，指导我一点一点的完善，改进。以下是对我帮助很大的文章！致敬！</p>
<ul>
<li><em><a href="https://blog.csdn.net/nightmare_dimple/article/details/86661502">Hexo博客优化之Next主题美化</a></em></li>
</ul>
<p>这是我找到的第一篇文章，里面的版面和风格挺吸引我的，写得也很清晰明了。是跟着这篇完成了最基本的title等信息的更改。遇到的问题是里面提到的很多配置是要再_custom.stym和_style.stym等文件里进行的，我在自己的文件夹找不到这些文件，因此就有了第二篇——</p>
<ul>
<li><em><a href="https://tding.top/archives/2bd6d82.html">Hexo-NexT 版本更新记录</a></em></li>
</ul>
<p>这篇是今天早上完成的工作，基本是跟着他完成了目前网页的个性化制作，本身网页就好漂亮哈哈给人产生“跟着他也能做得这么好看”的想法，给人以信心，里面最重要的是解决了 <strong>新版hexo找不到文件夹如何实现个性化功能</strong>的问题，里面的粒子时钟和圆角设计好喜欢好喜欢！</p>
<p>但是这篇文章也有需要更新的地方：</p>
<p><strong>首先</strong>是我第一次hexo g 的时候就提示我next.yml已经被deperated弃用了，让我升级至hexo 5或以上（xs）并改名为config_next.yml.</p>
<p><strong>其次</strong>是在hexo-theme-next文件夹下的_config.yml文件夹里已经没有了override这一配置（有一个override但那不是实现覆盖主题的功能），意味着不能在&#x2F;source&#x2F;_data&#x2F;下面新建next.yml来实现自定义主题的效果，所以我上一点所说的文件不知道还有什么用，只是改名后确实不会报错了。</p>
<p>噢想起来昨晚上闹的一个乌龙，deploy上去之后主题完全丢了，后来看着_config.yml文件看了一会才发现是我的URL写错了，本该写我的网站网址，结果写成了我的仓库网址hh。</p>
<p>乌龙2是在添加头像时把_config.yml里面的备用语句前面的#去掉了但是忘了把链接前的#去掉好笨好笨。</p>
<h3 id="4-如何让图片在网页中显示"><a href="#4-如何让图片在网页中显示" class="headerlink" title="4. 如何让图片在网页中显示"></a>4. 如何让图片在网页中显示</h3><p>这个问题可谓是困扰了我一天啊，找了好多文章试了几种方法才成功！最后是看到这篇文章的最后一点让我幡然醒悟！原来人家是这样解决问题的，我可能要搜：GitHub图片链接不显示之类的才行。</p>
<p><em><a href="https://www.cnblogs.com/ghm-777/p/11433425.html">Markdown使用Github图片地址</a></em></p>
<p><strong>最终我的做法是：</strong></p>
<p><strong>第一步</strong> 把图片放在本地仓库的文件夹里，hexo deploy过去，图片就生成了网址。</p>
<p><strong>第二步</strong> 把本地文章的图片链接替换成GitHub上的链接。 </p>
<p><strong>第三步</strong> 把链接中的blob改成raw，图片瞬间就出来了！太令人激动啦啦啦啦</p>
<p>我找到的第一篇提出的两种方法，方法一是直接在库上面新建.md文件，按照Markdown格式把图片在GitHub的链接放进去，preview的时候就能显示。我试过可以，但是这发布不上网页啊！方法二是在把图片直接插入.md,写完后把整篇文章的文字加图片复制到另一个空的.md，再上传就会把本地图片也一起上传。这个想法看似可行实际有点荒谬，代码这里根本看不到图片，而能看到图片的预览这里根本复制不了……</p>
<h3 id="5-添加标签、分类、关于页面"><a href="#5-添加标签、分类、关于页面" class="headerlink" title="5. 添加标签、分类、关于页面"></a>5. 添加标签、分类、关于页面</h3><p>这一步的教程找了好久呢，大概半个小时？没踩中关键词，一开始弹出来的都是GitHub仓库的页面装扮教程。所幸这一步的难度很低啦，创建加上写了一篇about也就用了40min。教程是这个：</p>
<p><a href="https://blog.csdn.net/nineya_com/article/details/103322773">hexo博客添加标签、分类、归档、关于等页面</a></p>
<hr>
<h2 id="要注意两个小问题"><a href="#要注意两个小问题" class="headerlink" title="要注意两个小问题"></a>要注意两个小问题</h2><h3 id="1-git-和-hexo-命令的使用范围"><a href="#1-git-和-hexo-命令的使用范围" class="headerlink" title="1. git 和 hexo 命令的使用范围"></a>1. git 和 hexo 命令的使用范围</h3><p>git命令只能在有.git文件夹的目录里打开Git Bash here才可用。clone需要在本地仓库文件夹内打开才可以成功pull和push。</p>
<p>hexo命令是只能在命令提示符进到本地仓库的目录下才可以使用。在我电脑要打开的路径是：D:\colorlife\diligencyj.github.io</p>
<p>（当初第一次使用时教程是有强调这一步的，但是再次使用这两个命令时不约而同的忘记了……为了打开它们还研究了好一会……）</p>
<h3 id="2-clone仓库时命令的先后顺序"><a href="#2-clone仓库时命令的先后顺序" class="headerlink" title="2. clone仓库时命令的先后顺序"></a>2. clone仓库时命令的先后顺序</h3><p>当想指定一个文件夹用来做clone的时候，<strong>首先是要<code>git init</code>初始化仓库</strong>，（虽说很多地方说不用，还说文章有.git文件会导致clone不成功，噢对了.git文件是隐藏文件，要“查看——隐藏的文件”才能看到）。**其次是<code>git clone 仓库SSL地址</code>**。</p>
<hr>
<h3 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h3><p>这次的搭建持续了可能也有十来个小时吧，从昨天早上十一点，到晚上睡觉，中午睡了两小时，晚上看了两小时音乐剧，真正用来做网页的时间也不多。但真的很顺利了可以说是呜呜，感谢我搜到的所有文章，你们告诉我的大多数解决方法都好棒！修缮过程到这里就先告一段落啦！</p>
<p>今天总算是知道怎么把图弄上网页了，但大块的图实在是不太美观，上一篇用了的就算了，这一篇就尽量不放图了。（其实也没有记录了，因为我发现在我的电脑黑屏两小时不到就会自动关机，清空所有的网页……）</p>
<p>2022&#x2F;12&#x2F;19</p>
<p>今天又上来看看，浅浅改了文章的一些格式和目录，以及给网站新增了搜索、点击礼花特效、字数和阅读时长统计、修改链接样式、显示摘要这六个功能！嘿嘿已经满熟练的啦，对于什么文件在哪个目录下，大致要修改什么地方，进行的很顺利捏！</p>
]]></content>
      <categories>
        <category>娱乐性学习</category>
        <category>计算机</category>
      </categories>
      <tags>
        <tag>搭建网站</tag>
      </tags>
  </entry>
  <entry>
    <title>浅谈我的消费观</title>
    <url>/2022/12/20/%E6%B5%85%E8%B0%88%E6%88%91%E7%9A%84%E6%B6%88%E8%B4%B9%E8%A7%82/</url>
    <content><![CDATA[<p>又名《今日下午刷tb有感》</p>
<p>也是借写文章的机会总结一下我的消费观念</p>
<span id="more"></span>

<p>在家呆了三周了，没有日历时间过得很没有实感，又快到下一年了，正好可以买一个新日历。嘿嘿便开心的打开了淘宝，那种将花又未花钱的感觉是最好的，只有买新东西的期待而没有花钱的痛感。一开始淘宝给我推的是那种很务实很简约，大大的空格给我写字，看似还挺合我胃口，但价格才6块8，让我觉得我心爱的要用一整年的日历不应该只值这个价……呃呃可能也是我个人的问题吧，<strong>在一些将会用较长时间的东西上不喜欢买过于便宜的东西</strong>，即使我理智也告诉我几张纸本就不值什么钱。想起我买手机支架，4.9的我偏不买要，买了一个22.9的……即使我也知道22.9的性价比不高。<strong>可能是在这种小钱上奢侈我不太care，让周围的小东西都精致美观才能让自己有一个很好的心情和状态呢hhh</strong>就像是我高三用着全套斑马百乐国誉文具，会让做笔记都变得更有意思。归根结底或许是奇怪的虚荣心吧……</p>
<p>后来看中一个正面也是简洁白净的，后面有横线写每月计划，有方格给每天实施情况打钩。很符合我对于自己的设想：自律、有恒心、用富兰克林方法养成了多种好习惯……于是这款日历被我全款拿下。再后来看到一个很漂亮的千里江山图的日历设计，木质底座＋硬纸卡，每月的纸卡组成了连绵的山峦，设计非常棒，短暂的心动了一小会，以不实用告终。在这方面我倒是挺理性的，<strong>只会买很符合我设想的东西，好看没大用的东西不会碰。</strong>想起了我的ycf台历，88rmb始终没下的了手，最重要的原因也是我买回来不会舍得用来写写画画，这就失去了日历的本来意义，而我也没那么想要几张厚实的照片。</p>
<p>自己的事情搞定了就想起有一位朋友快生日了，要挑一挑礼物。我挑礼物的标准：一是自己喜欢的（因为只有这一点最有把握），二是朋友可能喜欢的，三是一定要精致漂亮，可以接受不实用。所以买礼物的时候是我偏离自己消费观最远的时候，往往会买一些只有摆设价值没有实用价值的物品。这并不是说那些东西我不喜欢，相反，我只有刷到某样令我心动的东西，才会考虑给朋友送，只是如果是买给自己，永远过不了心里实用性这一关。<strong>不过礼物的意义不就是这样的吗，给朋友一瞬的惊喜，能在桌面上或其他地方一直陪伴着ta就更好了。还有就是，达成像我一样实用导向性太强的人获得一些可爱摆件和小玩意儿的愿望。</strong> 真需要的东西自己已经买了，哪能这么巧等朋友来送呢？（嘿嘿其实也不是没试过，但那实在是太心有灵犀啦！） 给朋友买礼物避免不了会纠结，我本身挑选自用物品的样式就有够纠结了，现在还要加一层纠结：猜测琢磨朋友会喜欢哪一种，哪一款更适合ta……我个人认为纠结是一件很浪费时间的事情并有在极力避免纠结发生：比如少逛tb少买东西，真要买时我也会大致就好，毕竟我纠结的根本是因为我是一个包容性很高的人，都可以接受。但或许我的朋友不是……我买礼物总想精益求精……也不知道上一次买的礼物朋友喜不喜欢……</p>
<p>挑完礼物纠结完款式之后美美睡了一觉，起来继续刷了0.5h的tb。这次就是漫无目的的刷，挑些令我印象深刻的说。首先点进了最近给我拼命推的卡西欧新款手表，7000+的price……怎么，是觉得我会是它的目标客户吗？这大数据判断的未免也太不精准了吧？呃怎么说，我个人感觉我的价格接受程度是有在提高，从几年前100+的鞋现在买到了400+，也是之前说过的那个原因，<strong>会陪伴我很久或者使用频率很高的东西我会倾向于花更大价钱打造更好的</strong>。从这个角度来说卡西欧的手表是符合我这个消费想法的，只是不是我这一消费层次的人考虑的。接着是看到有卖160r的弹弓的，点进评论清一色的好评，说弹弓手感如何好，准度如何高，人体美学设计如何科学。想起我曾经也有一个弹弓，三年级在深圳买的，当时我表哥买了一把小扇子，我坚持要那把弹弓，只有我妈支持我，现在想来我们家只有我妈不会在意世俗认为的女生应该玩什么喜欢什么，应该成长为什么样子，而我从小性格确实也不像普通小女孩一般。小时候买东西可不管有用没有，只要它酷我就想要。最后是想说说一个响指奶盖，799，还不少人购买，大致的样子就是两个磁铁一样的东西吸在一起（商家说是用磁悬浮？），扭动的时候会发出响指一样的喀喀声，手感也很好。呃如果是79我可能脑子亿热就会买了，但这是799……我无法想象会是什么消费水平、什么需求的人会买这个东西，<strong>大概是世界上有闲钱的人很多，便能买很多无用但能令心情好的小玩意儿吧，从这个角度来说也可以理解，但不会效仿</strong></p>
<p>说到这里就不得不提进剧场看剧，票价基本是180&#x2F;280起步封顶880&#x2F;1080。但是今天没空剖析我对于这个特定爱好的消费想法了，因为今天的任务一项都没有完成……等有空再回来填坑。</p>
]]></content>
      <categories>
        <category>个性化想法</category>
      </categories>
  </entry>
</search>
